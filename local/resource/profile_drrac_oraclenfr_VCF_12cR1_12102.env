#!/bin/ksh
# $Header: /u999/cvsadmin/cms_rep/repository/local_acc/resource/profile_drrac_oraclenfr_VCF_12cR1_12102.env,v 1.2 2020/09/17 23:25:59 cvsadmin Exp $
# -----------------------------------------------------------------------------------------------
# Script  : .profile
# Purpose : this is user profile for database owner
# Usage   : . profile_exampleRAC_11gR2.env [<ORACLE_SID>]
# Notes   : this file is maintained by CVS source code system. Any change on this file should
#           be done through the SDLC path.
# Changes :
#           Seq Name          Date       Description
#           --- ------------- ---------- --------------------------------------------------------
#           000 AM Group      2005/06/14 Initial creation
#           001 AM Group      2011/02/01 update for rac
# -----------------------------------------------------------------------------------------------
#

################################
# customer settings            #
################################
WHOIAM=`whoami`
export WHOIAM

#ORACLE_UNQNAME=RACDB				# change ORACLE_UNQNAME
#export ORACLE_UNQNAME		

ORACLE_DBNAME=${ORACLE_DBNAME:-${ORACLE_UNQNAME}}	# mandatory
export ORACLE_DBNAME

ORACLE_UNQNAME_LOWCASE=`echo ${ORACLE_UNQNAME} | tr '[:upper:]' '[:lower:]'`
export ORACLE_UNQNAME_LOWCASE

ORACLE_DBNAME_LOWCASE=`echo ${ORACLE_DBNAME} | tr '[:upper:]' '[:lower:]'`
export ORACLE_DBNAME_LOWCASE

unset ORACLE_SID_RUNNING
ORACLE_SID_PREFIX=`echo ${ORACLE_UNQNAME} | sed 's/_//g' | awk '{print substr($0, 1, 8)}'`
if [ `ps -ef|egrep "ora_pmon_${ORACLE_SID_PREFIX}_[[:digit:]]*|ora_pmon_${ORACLE_SID_PREFIX}[[:digit:]]*" | grep -cv grep` -gt 0 ]; then
	ORACLE_SID_RUNNING=`ps -eo cmd | egrep "ora_pmon_${ORACLE_SID_PREFIX}_[[:digit:]]*|ora_pmon_${ORACLE_SID_PREFIX}[[:digit:]]*" | grep -v grep | cut -d_ -f3-`
fi
export ORACLE_SID_RUNNING

if [ ! -n "${ORACLE_SID_RUNNING}" ]; then
	if [ $# -ge 1 ]; then
		ORACLE_SID="${1}"			# set ORACLE_SID for rac
	else
		ORACLE_SID=${ORACLE_UNQNAME}
	fi
else
	ORACLE_SID=${ORACLE_SID_RUNNING}
fi
export ORACLE_SID

ORACLE_SID_LOWCASE=`echo ${ORACLE_SID} | tr '[:upper:]' '[:lower:]'`
export ORACLE_SID_LOWCASE

RDBMS_TYPE=${RDBMS_TYPE:-"NON-CDB"}			
export RDBMS_TYPE

case "${RDBMS_TYPE}" in 
	"CDB")	PDB_NAME="CDB\$ROOT"
		export PDB_NAME
		ORA_MULTITENANT=Y			# pluggable db/multitenant=on
		export ORA_MULTITENANT
		ORACLE_TNS=${ORACLE_TNS:-${ORACLE_UNQNAME}}
		export ORACLE_TNS
		:;;
	"PDB")	PDB_NAME=${PDB_NAME:-"PDB1"}
		export PDB_NAME
		ORA_MULTITENANT=Y			# pluggable db/multitenant=on
		export ORA_MULTITENANT
		ORACLE_TNS=${ORACLE_TNS:-${PDB_NAME}}
		export ORACLE_TNS
		:;;
	*)	unset PDB_NAME
		ORA_MULTITENANT=N			# pluggable db/multitenant=off
		export ORA_MULTITENANT
		ORACLE_TNS=${ORACLE_UNQNAME}
		export ORACLE_TNS
		:;;
esac

ORA_ROOT=${ORA_ROOT:-"/nfr001"}
export ORA_ROOT

DBF_ROOT=${DBF_ROOT:-"+NFR_T2_VCF_DATA"}
export DBF_ROOT

ARCH_ROOT=${ARCH_ROOT:-"+NFR_TD_FRA"}
export ARCH_ROOT

FRA_ROOT=${FRA_ROOT:-"+NFR_TD_FRA"}
export FRA_ROOT

REDO1_ROOT=${REDO1_ROOT:-"+NFR_T0_REDOA"}
export REDO1_ROOT

REDO2_ROOT=${REDO2_ROOT:-"+NFR_T0_REDOB"}
export REDO2_ROOT

PWDFILE_ROOT=${PWDFILE_ROOT:-"+NFR_T0_SHA_DATA"}
export PWDFILE_ROOT

RMAN_ROOT=${RMAN_ROOT:-"/nfrdata"}		#"+RECO"
export RMAN_ROOT

XFR_ROOT=${XFR_ROOT:-"/nfrdata"}
export XFR_ROOT

TBS_ROOT_MAPPING=${TBS_ROOT_MAPPING:-"SYSTEM:+NFR_T0_SHA_DATA,SYSAUX:+NFR_T0_SHA_DATA,UNDOTBS1:+NFR_T0_SHA_DATA,UNDOTBS2:+NFR_T0_SHA_DATA,UNDOTBS3:+NFR_T0_SHA_DATA,UNDOTBS4:+NFR_T0_SHA_DATA,UNDOTBS5:+NFR_T0_SHA_DATA,UNDOTBS6:+NFR_T0_SHA_DATA"}	
export TBS_ROOT_MAPPING

ORACLE_BASE=${ORACLE_BASE:-"${ORA_ROOT}/app/oraclenfr"}
export ORACLE_BASE

ORACLE_HOME=${ORACLE_HOME:-"${ORACLE_BASE}/product/12.1.0.2/vcf"}
export ORACLE_HOME

LISTENER_NAME=${LISTENER_NAME:-"LISTENER"}
export LISTENER_NAME

DIAG_ROOT=${DIAG_ROOT:-${ORACLE_BASE}}
export DIAG_ROOT

################################
# db generic settings          #
################################
PATH=${ORACLE_HOME}/bin:${ORACLE_HOME}/OPatch:${ORACLE_HOME}/perl/bin:${PATH}
export PATH

ORACLE_TERM=vt100
export ORACLE_TERM

LD_LIBRARY_PATH=${ORACLE_HOME}/lib:${ORACLE_HOME}/ctx/lib:${LD_LIBRARY_PATH}
export LD_LIBRARY_PATH

unset LD_LIBRARY_PATH_64
#LD_LIBRARY_PATH_64=${ORACLE_HOME}/lib
#export LD_LIBRARY_PATH_64

LIBPATH=${ORACLE_HOME}/lib
export LIBPATH

SHLIB_PATH=${ORACLE_HOME}/lib
export SHLIB_PATH

unset ORA_TZFILE
#ORA_TZFILE=${ORACLE_HOME}/oracore/zoneinfo/[little|big]/timezlrg_14.dat
#export ORA_TZFILE

ORA_NLS10=${ORACLE_HOME}/nls/data
export ORA_NLS10

unset ORA_NLS33
#ORA_NLS33=${ORACLE_HOME}/ocommon/nls/admin/data
#export ORA_NLS33

NLS_LANG=AMERICAN_AMERICA.WE8MSWIN1252		# AMERICAN_AMERICA.WE8MSWIN1252, "ENGLISH_NEW ZEALAND.WE8MSWIN1252", AMERICAN_AMERICA.UTF8
export NLS_LANG

NLS_DATE_FORMAT="DD-MON-RRRR"
export NLS_DATE_FORMAT

NLS_NUMERIC_CHARACTERS=".,"
export NLS_NUMERIC_CHARACTERS

NLS_SORT="binary"
export NLS_SORT

unset TNS_ADMIN
#TNS_ADMIN=${ORACLE_HOME}/network/admin		# change TNS_ADMIN
#export TNS_ADMIN

################################
# EMDiagKit Settings           #
################################
EMDIAG_HOME=${ORACLE_HOME}/emdiag
export EMDIAG_HOME

################################
# file location settings       #
################################
# dbf/temp files location
if [ `echo ${DBF_ROOT} | awk '{print substr($0,1,1)}'` = "+" ]; then
	DBF_ASM=Y
	case "${ORA_MULTITENANT}" in 
		"Y"|"ON")	# cdb/pluggable db
			DBF_BASE=${DBF_ROOT}
			TMPF_BASE=${DBF_ROOT}
			:;;
		*)		# non-cdb
			DBF_BASE=${DBF_ROOT}/${ORACLE_UNQNAME}/DATAFILE
			TMPF_BASE=${DBF_ROOT}/${ORACLE_UNQNAME}/TEMPFILE
			:;;
	esac
else
	DBF_ASM=N
	DBF_BASE=${DBF_ROOT}/oradata/${ORACLE_UNQNAME}	
	TMPF_BASE=${DBF_BASE}
fi
export DBF_ASM DBF_BASE TMPF_BASE

# archivelog location
if [ `echo ${ARCH_ROOT} | awk '{print substr($0,1,1)}'` = "+" ]; then
	ARCH_ASM=Y
	ARCH_BASE=${ARCH_ROOT}/${ORACLE_UNQNAME}/ARCHIVELOG
else
	ARCH_ASM=N
	ARCH_BASE=${ARCH_ROOT}/oraarch/${ORACLE_UNQNAME}	
fi
export ARCH_ASM ARCH_BASE

# fra loaction
if [ `echo ${FRA_ROOT} | awk '{print substr($0,1,1)}'` = "+" ]; then
	FRA_ASM=Y
	FRA_BASE=${FRA_ROOT}/${ORACLE_UNQNAME}/FLASHBACK
else
	FRA_ASM=N
	FRA_BASE=${FRA_ROOT}/orafra/${ORACLE_UNQNAME}	
fi
export FRA_ASM FRA_BASE

# redo member 1 location
if [ `echo ${REDO1_ROOT} | awk '{print substr($0,1,1)}'` = "+" ]; then
        REDO1_ASM=Y
        REDO_BASE_1=${REDO1_ROOT}/${ORACLE_UNQNAME}/ONLINELOG
else
        REDO1_ASM=N
        REDO_BASE_1=${REDO1_ROOT}/oradata/${ORACLE_UNQNAME}
fi
export REDO1_ASM REDO_BASE_1

# redo member 2 location
if [ `echo ${REDO2_ROOT} | awk '{print substr($0,1,1)}'` = "+" ]; then
        REDO2_ASM=Y
        REDO_BASE_2=${REDO2_ROOT}/${ORACLE_UNQNAME}/ONLINELOG
else
        REDO2_ASM=N
        REDO_BASE_2=${REDO2_ROOT}/oradata/${ORACLE_UNQNAME}
fi
export REDO2_ASM REDO_BASE_2

# password file location
if [ `echo ${PWDFILE_ROOT} | awk '{print substr($0,1,1)}'` = "+" ]; then
	PWDFILE_ASM=Y
	PWDFILE_BASE=${PWDFILE_ROOT}/${ORACLE_UNQNAME}/PASSWORD
else
	PWDFILE_ASM=N
	PWDFILE_BASE=${ORACLE_HOME}/dbs
fi
export PWDFILE_ASM PWDFILE_BASE

# rman disk location
if [ `echo ${RMAN_ROOT} | awk '{print substr($0,1,1)}'` = "+" ]; then
	RMAN_DISK_ASM=Y
	RMAN_DISK_DEST=${RMAN_ROOT}/${ORACLE_UNQNAME}/FLASHBACK
else
	RMAN_DISK_ASM=N
	RMAN_DISK_DEST=${RMAN_ROOT}/backup/${ORACLE_UNQNAME}	
fi
export RMAN_DISK_ASM RMAN_DISK_DEST

DIAG_BASE=${DIAG_ROOT}/diag/rdbms/${ORACLE_UNQNAME_LOWCASE}/${ORACLE_SID}			# diagnose home
export DIAG_BASE

PATCH_TOP=/nfru999/patch					# change PATCH_TOP
export PATCH_TOP

XFR_BASE=${XFR_ROOT}/${ORACLE_UNQNAME}
export XFR_BASE

unset PERL5LIB

################################
# application generic settings #
################################
VCF_TOP=${MODULE_BASE}/${MODULE_TOP}
export VCF_TOP

DBA_TOP=${MODULE_BASE}/cmsappl/dba
export DBA_TOP

PATH=${VCF_TOP}/bin:${DBA_TOP}/bin:${PATH}
export PATH

SQLPATH=${VCF_TOP}/sql:${DBA_TOP}/sql:${SQLPATH}
export SQLPATH

ORACLE_PATH=${DBA_TOP}/sql
export ORACLE_PATH

SCHEMA_VCF=${SCHEMA_VCF:-"VCF_OCS"}
export SCHEMA_VCF
